原始需求：
    角色:学校、学员、课程、讲师
    要求:
    1. 创建北京、上海 2 所学校
    2. 创建linux , python , go 3个课程 ， linux\py 在北京开， go 在上海开
    3. 课程包含，周期，价格，通过学校创建课程
    4. 通过学校创建班级， 班级关联课程、讲师
    5. 创建学员时，选择学校，关联班级
    5. 创建讲师角色时要关联学校，
    6. 提供两个角色接口
    6.1 学员视图， 可以注册， 交学费， 选择班级，
    6.2 讲师视图， 讲师可管理自己的班级， 上课时选择班级， 查看班级学员列表 ， 修改所管理的学员的成绩
    6.3 管理视图，创建讲师， 创建班级，创建课程
    7. 上面的操作产生的数据都通过pickle序列化保存到文件里


#分析：

实体类：
    School：name,addr
    Course：name,price,period，school
    Grade：name,start_time,teacher,course
    Student:name,age，school，grade
    Teacher:name,salary,school
问题：
    1. 实体没有唯一主键标识 。例如：学校名字可能会相同。
    2. 需求模糊
        2.1 通过...创建，和....关联 表示应统一表述
        2.2 学生试图： 可以注册，交续费，选择班级
        2.3 讲师试图：又是新名字，讨厌。管理自己的班级，具体指？....
        2.4 管理员试图：管理基础数据，没有说明操作条件
分析：
    1. 每个类加入的id，有hash算放生成，类似uuid
    2.1. 创建时，存在关联关系的，必须先创建被关联项目。例如：创建课程的时必须先选择学校
    2.2. 学生试图：可以注册。 说明可以自己创建自己，可以登陆。隐藏实体 user，隐藏功能：权限判定
         可以缴费。 这个不做，不可能缴费的。:-） 选择班级需求重复，创建时必须选择
    2.3 老师试图：查看班级（一个老师可以带多个班），查看各个班级的学生。修改成绩：又一个坑，隐藏考试，超出本系统定位，不做
    2.4 只做创建，不做删除和修改。因为缺少操作前置条件。例如： 修改学校地址，从北京修改到上海，那学生如何处理？


交互：
    1.循环提示用户选择创建的对象
    2.存在组合关系必须进行选择。例如：创建课程之前，提供选择 那个学校开设的课程


技术分析：
    1. 登陆判断用户角色<新增>,不同用户操作不同界面
    2. 创建一个字典保存所有数据，pickle到 \data\sc.data

